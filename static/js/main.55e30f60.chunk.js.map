{"version":3,"sources":["img/dracaena-marginata1.png","components/About.jsx","img/sun.png","img/moon.png","context.js","components/DarkMode.jsx","components/Footer.jsx","img/light1.jpg","components/Light.jsx","components/Navbar.jsx","img/dracaena-soil.jpeg","components/Soil.jsx","img/temperature1.jpg","components/Temperature.jsx","components/Minicard.jsx","img/water1.jpg","components/Water.jsx","App.jsx","index.js"],"names":["Container","styled","div","Left","Right","Desc","p","Image","img","About","id","src","Dracaena","ThemeContext","createContext","INITIAL_STATE","darkMode","ThemeReducer","state","action","type","ThemeProvider","props","useReducer","dispatch","Provider","value","children","Button","button","DarkMode","theme","useContext","Day","alt","Night","onClick","style","left","Wrapper","Copyright","span","Footer","Title","h1","smallScreen","window","screen","width","console","log","Light","LightPhoto","Logo","Menu","ul","MenuItem","li","Navbar","backgroundColor","to","smooth","duration","textDecoration","Soil","SoilImg","Temperature","TempPhoto","Text","Minicard","title","text","CardContainer","Water","WaterPhoto","TopBtn","App","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55e30f60.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dracaena-marginata1.59a6a1af.png\";","import React from 'react'\nimport styled from 'styled-components'\nimport Dracaena from '../img/dracaena-marginata1.png'\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    display: flex;\n    padding: 20px;\n\n    @media only screen and (max-width: 480px) {\n        flex-direction: column;\n    }\n`;\nconst Left = styled.div`\n    width: 60%;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        height: 50%;\n    }\n`;\nconst Right = styled.div`\n    width: 40%;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        height: 50%;\n        display:flex;\n        align-items: center;\n        justify-content: center;\n    }\n`;\nconst Desc = styled.p`\n    width: 60%;\n    font-size: 25px;\n    margin-top: 20px;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        margin-top: 80px;\n        font-size: 20px;\n    }    \n`;\nconst Image = styled.img`\n    width: 55%;\n\n    @media only screen and (max-width: 480px) {\n        width: 30%;\n    }     \n`;\n\nconst About = () => {\n\n    return (\n        <Container id=\"About\">\n            <Left>\n                <Desc>\n                    Also known as <b>Dragon Tree</b>, this is an attractive plant with green sword-like, red-edged leaves. Native to Madagascar, the eye-catching spiky tree is known as a great entry plant for household gardenersâ€”it's easy to care for, drought-tolerant, and nearly indestructible. This small tree will grow to about 20 feet in warm outdoor climates, but it is generally grown as a potted houseplant and kept pruned to 6 feet or less. Keep the dragon tree away from pets because it's toxic to animals if ingested.\n                </Desc>\n            </Left>\n            <Right>\n                <Image src={Dracaena}/>\n            </Right>\n            \n        </Container>\n    )\n}\n\nexport default About\n","export default __webpack_public_path__ + \"static/media/sun.f794832a.png\";","export default __webpack_public_path__ + \"static/media/moon.3bea3d39.png\";","import { createContext, useReducer } from \"react\";\n\nexport const ThemeContext = createContext();\n\nconst INITIAL_STATE = { darkMode: false };\n\nconst ThemeReducer = (state, action) => {\n    switch(action.type){\n        case \"TOGGLE\":\n            return { darkMode: !state.darkMode };\n        default:\n            return false;\n    }\n}\n\nexport const ThemeProvider = (props) => {\n    const [state, dispatch] = useReducer(ThemeReducer, INITIAL_STATE);\n    return (\n        <ThemeContext.Provider value={{state, dispatch}}>\n            {props.children}\n        </ThemeContext.Provider>\n    )\n}","import React, { useContext } from 'react'\nimport styled from \"styled-components\";\nimport Day from '../img/sun.png';\nimport Night from '../img/moon.png';\nimport { ThemeContext } from '../context';\n\nconst Container = styled.div`\n    width: 50px;\n    height: 25px;\n    border-radius: 20px;\n    border: 1pz solid #999;\n    background-color: white;\n    position: fixed;\n    top: 50px;\n    right: 10px;\n    z-index: 999;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    border: 1px solid #999;\n`;\n\nconst Image = styled.img`\n    width: 15px;\n    height: 15px;\n`;\n\nconst Button = styled.button`\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n    background-color: #81b181;\n    position: absolute;\n    cursor: pointer;\n`;\n\nconst DarkMode = () => {\n\n    const theme = useContext(ThemeContext);\n\n    const handleClick = () => {\n        theme.dispatch({type: \"TOGGLE\"});\n    };\n\n    return (\n        <Container>\n            <Image src={Day} alt=\"\"/>\n            <Image src={Night} alt=\"\"/>\n            <Button\n                onClick={handleClick}\n                style={{left: theme.state.darkMode ? 0 : 25}}>\n            </Button>\n        </Container>\n    )\n}\n\nexport default DarkMode\n","import React from 'react'\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 10%;\n  background-color: #111;\n  color: lightgray;\n`;\n\nconst Wrapper = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n  @media only screen and (max-width: 480px) {\n    padding: 10px;\n  }\n`;\n\nconst Copyright = styled.span`\n  @media only screen and (max-width: 480px) {\n    font-size: 14px;\n  }\n`;\n\nconst Footer = () => {\n    return (\n        <Container>\n        <Wrapper>\n          <Copyright>HenriqueT â’¸ 2021</Copyright>\n        </Wrapper>\n      </Container>\n    )\n}\n\nexport default Footer\n","export default __webpack_public_path__ + \"static/media/light1.ba5abcec.jpg\";","import React from 'react'\nimport styled from 'styled-components'\nimport LightPhoto from '../img/light1.jpg';\n\nconst Container = styled.div`\n    display: flex;\n    height: 100vh;\n    padding: 20px;\n\n    @media only screen and (max-width: 480px) {\n        flex-direction: column;\n    }     \n`;\n\nconst Left = styled.div`\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        height: 50%;\n    }      \n`;\n\nconst Right = styled.div`\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        height: 50%;\n    }     \n`;\n\nconst Image = styled.img`\n    width: 80%;\n\n    @media only screen and (max-width: 480px) {\n        width: 80%;\n    }   \n`;\n\nconst Title = styled.h1`\n    font-size: 50px;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        font-size: 40px;\n    }      \n`;\n\nconst Desc = styled.p`\n    font-size: 25px;\n    margin-top: 30px;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        margin-top: 55px;\n        font-size: 20px;\n    }     \n`;\n\nconst smallScreen = window.screen.width <= 480 ? true : false;\n\nconsole.log(smallScreen);\n\nconst Light = () => {\n    return (\n        <Container id=\"Light\">\n            {!smallScreen && <Left><Image src={LightPhoto}/></Left>}\n            <Right>\n                <Title>Light</Title>\n                <Desc>\n                Dragon trees grow best in bright light but can also survive in partial shade. Keep in mind, plants kept in lower light situations will grow slower and produce smaller leaves with less intense color. Additionally, take care not to place your dragon tree in a spot that receives direct rays of sunlight.\n                </Desc>\n            </Right>\n            {smallScreen && <Left><Image src={LightPhoto}/></Left>}\n        </Container>\n    )\n}\n\nexport default Light\n","import styled from 'styled-components'\nimport { Link } from 'react-scroll'\nimport { useContext } from 'react'\nimport { ThemeContext } from '../context'\n\n\nconst Container = styled.div`\n    height: 50px;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 999;\n    width: 100%;\n\n    @media only screen and (max-width: 480px) {\n        height: 40px;\n    }    \n`\nconst Wrapper = styled.div`\n    padding: 10px 20px;\n    display: flex;\n    justify-content:space-between;\n    align-items: center;\n`\nconst Left = styled.div`\n    width: 60%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n    }\n`\nconst Logo = styled.h1`\n    font-weight: bold;\n    text-decoration: underline green;\n    cursor: pointer;\n\n    @media only screen and (max-width: 480px) {\n        font-size: 20px;\n    }    \n`\nconst Menu = styled.ul`\n    display: flex;\n    list-style: none;\n\n    @media only screen and (max-width: 480px) {\n        display: none;\n    }\n`\nconst MenuItem = styled.li`\n    margin-right: 30px;\n    font-size: 20px;\n    font-weight: bold;\n    cursor: pointer;\n`\n\nconst Navbar = () => {\n\n    const theme = useContext(ThemeContext);\n    const darkMode = theme.state.darkMode;\n\n    return (\n        <Container style={{\n            backgroundColor: darkMode ? \"#222\" : \"white\"\n        }}>\n            <Wrapper>\n                <Left>\n                    <Logo><Link to=\"About\" smooth={true} duration={1000} style={{textDecoration:\"underline green\"}}>Dracaena Marginata</Link></Logo>\n                    <Menu>\n                        <MenuItem><Link to=\"Soil\" smooth={true} duration={1000}>Soil</Link></MenuItem>\n                        <MenuItem><Link to=\"Water\" smooth={true} duration={1000}>Water</Link></MenuItem>\n                        <MenuItem><Link to=\"Light\" smooth={true} duration={1000}>Light</Link></MenuItem>\n                        <MenuItem><Link to=\"Temperature\" smooth={true} duration={1000}>Temperature</Link></MenuItem>\n                    </Menu>\n                </Left>\n                <span>FAQ</span>\n            </Wrapper>\n        </Container>\n    )\n}\n\nexport default Navbar\n","export default __webpack_public_path__ + \"static/media/dracaena-soil.a1f878a3.jpeg\";","import React from 'react'\nimport styled from 'styled-components'\nimport SoilImg from '../img/dracaena-soil.jpeg'\n\nconst Container = styled.div`\n    display: flex;\n    height: 100vh;\n    padding: 20px;\n\n    @media only screen and (max-width: 480px) {\n        flex-direction: column;\n    }    \n`;\n\nconst Left = styled.div`\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        height: 50%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n    }     \n`;\n\nconst Right = styled.div`\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        height: 50%;\n    }    \n`;\n\nconst Image = styled.img`\n    width: 80%;\n\n    @media only screen and (max-width: 480px) {\n        width: 50%;\n    }     \n`;\n\nconst Title = styled.h1`\n    font-size: 50px;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        font-size: 40px;\n    }       \n`;\n\nconst Desc = styled.p`\n    font-size: 25px;\n    margin-top: 30px;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        margin-top: 55px;\n        font-size: 20px;\n    }      \n`;\n\nconst smallScreen = window.screen.width <= 480 ? true : false;\n\nconst Soil = () => {\n    return (\n        <Container id=\"Soil\">\n            {!smallScreen && <Left><Image src={SoilImg}/></Left>}\n            <Right>\n                <Title>Soil</Title>\n                <Desc>\n                    When growing dragon tree as a potted plant, use a loose, well-drained potting mixâ€”loamy soil amended with peat moss is ideal. Make sure the container you choose has room for the plant's extensive root system.\n                </Desc>\n            </Right>\n            {smallScreen && <Left><Image src={SoilImg}/></Left>}\n        </Container>\n    )\n}\n\nexport default Soil\n","export default __webpack_public_path__ + \"static/media/temperature1.a4ca8486.jpg\";","import React from 'react'\nimport styled from 'styled-components'\nimport TempPhoto from '../img/temperature1.jpg';\n\nconst Container = styled.div`\n    height: 90%;\n    display: flex;\n    padding: 20px;\n\n    @media only screen and (max-width: 480px) {\n        flex-direction: column;\n    }       \n`;\nconst Left = styled.div`\n    width: 60%;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        height: 50%;\n    }       \n`;\n\nconst Right = styled.div`\n    width: 40%;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        height: 50%;\n    }      \n`;\n\nconst Title = styled.h1`\n    font-size: 50px;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        font-size: 40px;\n    }     \n`;\n\nconst Desc = styled.p`\n    width: 60%;\n    font-size: 25px;\n    margin-top: 20px;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        font-size: 20px;\n    }       \n`;\n\nconst Image = styled.img`\n    width: 100%;\n`;\n\nconst Temperature = () => {\n    return (\n        <Container id=\"Temperature\">\n            <Left>\n                <Title>Temperature</Title>\n                <Desc>\n                    Dragon trees prefer warmer temperatures between 70 and 80 degrees Fahrenheit. Regular household humidity should be fine for them, but if your house is particularly dry, you can consider misting the pant lightly from a spray bottle every few days.\n                </Desc>\n            </Left>    \n            <Right>\n                <Image src={TempPhoto}/>\n            </Right>\n        </Container>\n    )\n}\n\nexport default Temperature\n","import React from 'react'\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 250px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  -webkit-box-shadow: 0px 0px 17px -11px rgba(0, 0, 0, 0.58);\n  box-shadow: 0px 0px 17px -11px rgba(0, 0, 0, 0.58);\n\n  @media only screen and (max-width: 480px) {\n    width: 130px\n  }\n`;\n\n// const Image = styled.img`\n//   width: 20px;\n// `;\n\nconst Title = styled.span`\n  font-weight: bold;\n  font-size: 15px;\n`;\n\nconst Text = styled.span`\n  margin-top: 10px;\n  text-align:center;\n  @media only screen and (max-width: 480px) {\n    font-size: 14px;\n  }\n`;\n\nconst Minicard = (props) => {\n    return (\n        <Container>\n            <Title>{props.title}</Title>\n            <Text>{props.text}</Text>\n      </Container>\n    )\n}\n\nexport default Minicard\n","export default __webpack_public_path__ + \"static/media/water1.44d59f2d.jpg\";","import React from 'react'\nimport styled from 'styled-components'\nimport Minicard from './Minicard';\nimport WaterPhoto from '../img/water1.jpg';\n\nconst Container = styled.div`\n    height: 100vh;\n    display: flex;\n    padding: 20px;\n\n    @media only screen and (max-width: 480px) {\n        flex-direction: column;\n    }    \n`;\nconst Left = styled.div`\n    width: 60%;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        height: 80%;\n    }    \n`;\n\nconst Right = styled.div`\n    width: 40%;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        height: 20%;\n    }        \n`;\n\nconst Title = styled.h1`\n    font-size: 50px;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        font-size: 40px;\n    }       \n`;\n\nconst Desc = styled.p`\n    width: 60%;\n    font-size: 25px;\n    margin-top: 20px;\n\n    @media only screen and (max-width: 480px) {\n        width: 100%;\n        font-size: 20px;\n    }     \n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 50px;\n`;\n\nconst Image = styled.img`\n    width: 100%;\n\n    @media only screen and (max-width: 480px) {\n        width: 50%;\n    }       \n`;\n\nconst titleSummer = \"Spring/Summer:\";\nconst textSummer = \"This is usually the time of the year when Dracaena marginata grows most. Water regularly while letting the soil mix dry in the surface before watering again.\";\n\nconst titleWinter = \"Fall/Winter:\";\nconst textWinter = \"Start reducing the watering because the plantâ€™s water needs start decreasing. Only when the soil is dry down to the first inch or so (a couple centimeters), water to moisten the entire soil mix clump again.\";\n\nconst Water = () => {\n    return (\n        <Container id=\"Water\">\n            <Left>\n                <Title>Water</Title>\n                <Desc>\n                    Like with many drought-tolerant plants, it's easy to over-water the dragon tree. To ensure you don't drown it, wait until the top half of the soil is dry before watering (this can often take three weeks or more). If the plant has yellow leaves, it usually means it needs more water.\n                </Desc>\n                <CardContainer>\n                    <Minicard title={titleSummer} text={textSummer}/>\n                    <Minicard title={titleWinter} text={textWinter}/>\n                </CardContainer>                \n            </Left>    \n            <Right>\n                <Image src={WaterPhoto}/>\n            </Right>\n        </Container>\n    )\n}\n\nexport default Water\n","import { useContext } from \"react\";\nimport { Link } from \"react-scroll\";\nimport styled from \"styled-components\";\nimport About from \"./components/About\";\nimport DarkMode from \"./components/DarkMode\";\nimport Footer from \"./components/Footer\";\nimport Light from \"./components/Light\";\nimport Navbar from \"./components/Navbar\";\nimport Soil from \"./components/Soil\";\nimport Temperature from \"./components/Temperature\";\nimport Water from \"./components/Water\";\nimport { ThemeContext } from \"./context\";\n\nconst Container = styled.div`\n  height: 100vh;\n  overflow: hidden;\n`\n\nconst TopBtn = styled.button`\n    position: fixed;\n    bottom: 20px;\n    right: 30px;\n    z-index: 99;\n    font-size: 18px;\n    border: none;\n    outline: none;\n    background-color: #57a357;\n    color: white;\n    cursor: pointer;\n    padding: 15px;\n    border-radius: 4px;\n`;\n\nconst App = () => {\n\n  const theme = useContext(ThemeContext);\n  const darkMode = theme.state.darkMode;\n\n  return (\n    <div style={{\n      backgroundColor: darkMode ? \"#222\" : \"#ffffff\", \n      color: darkMode && \"white\"\n    }}>\n      <DarkMode/>\n      <Container>\n        <Navbar/>\n        <About/>\n      </Container>\n      <Container>\n        <Soil/>\n      </Container>\n      <Container>\n        <Water/>\n      </Container>\n      <Container>\n        <Light/>\n      </Container>\n      <Container>\n        <Temperature/>\n        <Footer/>\n      </Container>\n      <TopBtn id=\"myBtn\"><Link to=\"About\" smooth={true} duration={1000}>Top</Link></TopBtn>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from './context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}